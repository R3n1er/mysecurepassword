#!/bin/bash

echo "üîç Validation de l'int√©gration du logo MySecurePassword"
echo "=================================================="

# 1. V√©rifier les fichiers
echo ""
echo "üìÅ 1. V√©rification des fichiers logo :"
echo ""

if [ -f "images/logo-mysecurepassword-min.png" ]; then
    echo "‚úÖ Logo source (compress√©) : images/logo-mysecurepassword-min.png"
    ls -lh images/logo-mysecurepassword-min.png | awk '{print "   Taille:", $5}'
else
    echo "‚ùå Logo source manquant : images/logo-mysecurepassword-min.png"
fi

if [ -f "public/logo-mysecurepassword.png" ]; then
    echo "‚úÖ Logo public : public/logo-mysecurepassword.png"
    ls -lh public/logo-mysecurepassword.png | awk '{print "   Taille:", $5}'
else
    echo "‚ùå Logo public manquant : public/logo-mysecurepassword.png"
fi

# 2. V√©rifier l'int√©gration dans le composant
echo ""
echo "üîß 2. V√©rification de l'int√©gration dans le composant :"
echo ""

if grep -q "Image" src/components/password/PasswordGeneratorNew.tsx; then
    echo "‚úÖ Import Next/Image trouv√©"
else
    echo "‚ùå Import Next/Image manquant"
fi

if grep -q "logo-mysecurepassword.png" src/components/password/PasswordGeneratorNew.tsx; then
    echo "‚úÖ R√©f√©rence au logo trouv√©e dans le composant"
else
    echo "‚ùå R√©f√©rence au logo manquante dans le composant"
fi

if grep -q "MySecurePassword Logo" src/components/password/PasswordGeneratorNew.tsx; then
    echo "‚úÖ Alt text du logo trouv√©"
else
    echo "‚ùå Alt text du logo manquant"
fi

# 3. Afficher la configuration actuelle
echo ""
echo "‚öôÔ∏è  3. Configuration du logo :"
echo ""
echo "- Source: /logo-mysecurepassword.png"
echo "- Taille: 64x64 pixels"
echo "- Format: PNG compress√©"
echo "- Position: Header du g√©n√©rateur"
echo "- Alt text: MySecurePassword Logo"
echo "- Priority: true (chargement prioritaire)"

# 4. Tests √† effectuer
echo ""
echo "üß™ 4. Tests √† effectuer manuellement :"
echo ""
echo "Sur http://localhost:3001/ :"
echo "- ‚úÖ Le logo MySecurePassword s'affiche dans le header"
echo "- ‚úÖ Le logo a une taille appropri√©e (64x64px)"
echo "- ‚úÖ Le logo se charge rapidement (priority=true)"
echo "- ‚úÖ Le logo est centr√© avec le titre"
echo "- ‚úÖ Le logo respecte les couleurs du design"
echo ""
echo "Test d'accessibilit√© :"
echo "- ‚úÖ Le logo a un alt text descriptif"
echo "- ‚úÖ Le logo ne g√™ne pas la navigation au clavier"
echo "- ‚úÖ Le logo s'affiche sur tous les appareils"

# 5. V√©rification URL directe
echo ""
echo "üåê 5. Test d'acc√®s direct :"
echo ""
echo "URL √† tester : http://localhost:3001/logo-mysecurepassword.png"
echo "- Le logo doit s'afficher directement dans le navigateur"
echo "- V√©rifier la qualit√© et la compression"

echo ""
echo "‚úÖ VALIDATION TERMIN√âE"
echo ""
echo "üìã Actions suivantes :"
echo "1. Tester l'application : npm run dev"
echo "2. V√©rifier l'affichage sur http://localhost:3001/"
echo "3. Valider sur mobile et desktop"
echo "4. Commit les modifications si tout fonctionne"
echo ""